
"use strict"



var constants = require('jst/commons/constants')
var states    = require('jst/commons/constants').grammar.tokenStates





var transitions = function ( ) {

	var pairs            = Array.prototype.slice.call(arguments)
	var stateTransitions = pairs.map(pair => {

		var out    = { }

		var keyset = pair[0]
		var state  = pair[1]

		try {
			keyset.forEach(key => out[key] = state)
		} catch (err) {
			throw Error(`${state}: ${err.message}`)
		}

		return out

	})

	return Object.assign.apply([ ], [{ }].concat(stateTransitions))

}





var grammar = {

	[states.TYPE]: transitions(

		[constants.charset.mixedCaseLetters, states.TYPE],
		[constants.charset.whitespace,       states.WHITESPACE],
		[constants.charset.colon,            states.PSEUDOCLASS_OPEN],
		[constants.charset.openBracket,      states.ATTRIBUTE_OPEN],
		[constants.charset.comma,            states.RULE_SEPERATOR]

	),
	[states.ATTRIBUTE_OPEN]: transitions(

		[constants.charset.mixedCaseLetters, states.ATTRIBUTE_KEY]

	),

	[states.ATTRIBUTE_KEY]: transitions(

		[constants.charset.mixedCaseLetters, states.ATTRIBUTE_KEY],
		[constants.charset.operators,        states.OPERATOR]

	),

	[states.OPERATOR]: transitions(

		[constants.charset.whitespace,       states.WHITESPACE],
		[constants.charset.mixedCaseLetters, states.TYPE],
		[constants.charset.doubleString,     states.STRING_OPEN]

	),

	[states.STRING_OPEN]: transitions(

		[constants.charset.doubleString, states.STRING_CLOSE],
		[constants.charset.anyToken,     states.STRING]

	),

	[states.STRING]: transitions(

		[constants.charset.doubleString, states.STRING_CLOSE],
		[constants.charset.anyToken,     states.STRING]

	),

	[states.STRING_CLOSE]: transitions(

		[constants.charset.closeBracket,      states.ATTRIBUTE_CLOSE],
		[constants.charset.closeRoundBracket, states.PSEUDOCLASS_ARGUMENTS_CLOSE],
		[constants.charset.comma,             states.PSEUDOCLASS_ARGUMENT_SEPERATOR]

	),

	[states.ATTRIBUTE_CLOSE]: transitions(
		[constants.charset.comma, states.RULE_SEPERATOR]
	),

	[states.PSEUDOCLASS_OPEN]: transitions(

		[constants.charset.mixedCaseLetters, states.PSEUDOCLASS]

	),

	[states.PSEUDOCLASS]: transitions(

		[constants.charset.mixedCaseLetters, states.PSEUDOCLASS],
		[constants.charset.hypen,            states.PSEUDOCLASS],
		[constants.charset.openRoundBracket, states.PSEUDOCLASS_ARGUMENTS_OPEN],
		[constants.charset.whitespace,       states.WHITESPACE]

	),

	[states.PSEUDOCLASS_ARGUMENTS_OPEN]:  transitions(

		[constants.charset.doubleString, states.STRING_OPEN]

	),

	[states.PSEUDOCLASS_ARGUMENT_SEPERATOR]: transitions(

		[constants.charset.whitespace, states.WHITESPACE]

	),

	[states.PSEUDOCLASS_ARGUMENTS_CLOSE]: transitions(

		[constants.charset.whitespace, states.WHITESPACE],
		[constants.charset.comma,      states.RULE_SEPERATOR]

	),

	[states.RULE_SEPERATOR]: transitions(

		[constants.charset.whitespace,       states.WHITESPACE],
		[constants.charset.mixedCaseLetters, states.TYPE]

	),

	[states.WHITESPACE]: transitions(

		[constants.charset.whitespace,       states.WHITESPACE],
		[constants.charset.mixedCaseLetters, states.TYPE],
		[constants.charset.operators,        states.OPERATOR],
		[constants.charset.doubleString,     states.STRING_OPEN]

	)

}




module.exports = grammar
