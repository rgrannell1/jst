
"use strict"




require('babel-polyfill')





var io            = require('jst/io/io')
var parseJS       = require('jst/app/parse-js')
var readInput     = require('jst/io/read-input')

var parseSelector = require('jst/selector/parse-selector')





var remapPosition = position => {

	return {
		start: {
			line:   position.start.line - 1,
			column: position.start.column
		},
		end: {
			line:   position.end.line,
			column: position.end.column
		}
	}

}

var selectText = (position, fcontent) => {

	var lines = fcontent.split('\n').slice(position.start.line, position.end.line + 1)

	lines[0]                = lines[0].slice(position.start.column)
	lines[lines.length - 1] = lines[lines.length - 1].slice(position.end.column + 1)

	return lines.join('\n')

}

var selectContent = (selector, args, fcontent) => {

	return parseJS(args, fcontent).body[1].loc

}




var jst = rawArgs => {

	var args = jst.preprocess(jst.validate(rawArgs))

	parseSelector(args.selector)

	readInput(args.readStdin, args.paths, (err, fcontent) => {

		var pos = selectContent('', args, fcontent)

		console.log(
			selectText( remapPosition(pos), fcontent)
		)

	})

}

jst.preprocess = args => {

	return {
		readStdin:      args['-'],
		paths:          args['<path>'],
		selector:       args['<selector>'],
		suppressErrors: args['-s'] || args['--suppress-errors']
	}

}

jst.validate = args => {

	return args

}





module.exports = jst
